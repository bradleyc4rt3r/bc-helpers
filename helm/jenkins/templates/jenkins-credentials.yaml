apiVersion: v1
kind: Secret
metadata:
  name: github-ssh-key-credential #Jenkins credential id
  namespace: jenkins
  labels:
    "jenkins.io/credentials-type": "basicSSHUserPrivateKey"
type: Opaque
stringData:
  username: git
  privateKey: |-
{{ .Values.githubKeyJenkins | indent 4 }}

---
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-ssh-key-credential #Jenkins credential id
  namespace: jenkins
  labels:
    # so we know what type it is.
    "jenkins.io/credentials-type": "basicSSHUserPrivateKey"
type: Opaque
stringData:
  username: git
  privateKey: |-
{{ .Values.gitlabKeyJenkins | indent 4 }}

---
apiVersion: v1
kind: Secret
metadata:
  name: gpg-key #Jenkins credential id
  namespace: jenkins
  labels:
# so we know what type it is.
    "jenkins.io/credentials-type": "secretText"
  annotations:
# description - can not be a label as spaces are not allowed
    "jenkins.io/credentials-description" : "secret text credential from Kubernetes"
type: Opaque
stringData:
  text: {{ .Values.gpgKey | b64dec }}

---
apiVersion: v1
kind: Secret
metadata:
# this is the jenkins id.
  name: "ssh-config" #put this file in Jenkinsfile
  namespace: jenkins
  labels:
# so we know what type it is.
    "jenkins.io/credentials-type": "secretFile"
  annotations:
# description - can not be a label as spaces are not allowed
    "jenkins.io/credentials-description" : "secret file credential from Kubernetes"
type: Opaque
stringData:
  filename: config
data:
# base64 encoded bytes
  data: |-
{{ .Values.config | indent 4 }}